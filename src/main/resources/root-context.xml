<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->
	<!-- datasource 등록은 서버 연동과 같이 db 연결이 같이 
		이루어져야 하기 때문에 root-context.xml 에서 설정한다.
	 -->
	<!-- DataSource 등록 : db연결 정보 -->
	<!-- destroy-method 속성은 db 연결 세션을 자동으로 close 
		하라는 뜻임 -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName"
			value="oracle.jdbc.driver.OracleDriver" />
		<property name="url"
			value="jdbc:oracle:thin:@localhost:1521:xe" />
		<property name="username" value="student" />
		<property name="password" value="student" />
		<property name="defaultAutoCommit" value="false"/>
	</bean>
	
	<!-- spring과 mybatis 연결 -->

	<bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionFactoryBean">
	<property name="configLocation"
		value="classpath:mybatis-config.xml"/>
	<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<bean class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSession"/>
	</bean>
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="select*" rollback-for="Exception"
				read-only="true" />
			<tx:method name="insert*" rollback-for="Exception" />
			<tx:method name="update*" rollback-for="Exception"/>
			<tx:method name="delete*" rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice>

	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<aop:config proxy-target-class="true">
		<aop:pointcut expression="execution(* com.hg.second.**.model.service.*ServiceImpl.*(..))" id="serviceMethod"/>
		<aop:advisor advice-ref="txAdvice" id="transactionAdvisor" pointcut-ref="serviceMethod"/>
	</aop:config>
	
	
</beans>
